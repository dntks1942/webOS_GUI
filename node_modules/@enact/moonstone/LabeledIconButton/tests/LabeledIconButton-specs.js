"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _LabeledIconButton = _interopRequireDefault(require("../LabeledIconButton"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('LabeledIconButton Voice Control Specs', function () {
  test('should set "data-webos-voice-disabled" to IconButton', function () {
    var labeledIconButton = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_LabeledIconButton["default"], {
      "data-webos-voice-disabled": true
    }, "star"));
    var expected = true;
    var actual = labeledIconButton.find('[role="button"]').prop('data-webos-voice-disabled');
    expect(actual).toBe(expected);
  });
  test('should set "data-webos-voice-group-label" to IconButton', function () {
    var voiceGroupLabel = 'voice group label';
    var labeledIconButton = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_LabeledIconButton["default"], {
      "data-webos-voice-group-label": voiceGroupLabel
    }, "star"));
    var expected = voiceGroupLabel;
    var actual = labeledIconButton.find('[role="button"]').prop('data-webos-voice-group-label');
    expect(actual).toBe(expected);
  });
  test('should set "data-webos-voice-label" to IconButton', function () {
    var voiceLabel = 'voice label';
    var labeledIconButton = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_LabeledIconButton["default"], {
      "data-webos-voice-label": voiceLabel
    }, "star"));
    var expected = voiceLabel;
    var actual = labeledIconButton.find('[role="button"]').prop('data-webos-voice-label');
    expect(actual).toBe(expected);
  });
  test('should set "data-webos-voice-intent" to IconButton', function () {
    var voiceIntent = 'Select PlayContent';
    var labeledIconButton = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_LabeledIconButton["default"], {
      "data-webos-voice-intent": voiceIntent
    }, "star"));
    var expected = voiceIntent;
    var actual = labeledIconButton.find('[role="button"]').prop('data-webos-voice-intent');
    expect(actual).toBe(expected);
  });
});