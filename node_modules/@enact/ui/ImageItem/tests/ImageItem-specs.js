"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _ImageItem = require("../ImageItem");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var src = {
  'hd': 'http://lorempixel.com/64/64/city/1/',
  'fhd': 'http://lorempixel.com/128/128/city/1/',
  'uhd': 'http://lorempixel.com/256/256/city/1/'
};
describe('ImageItem', function () {
  function Img() {
    return null;
  }

  test('should support `children` prop', function () {
    var children = 'children';
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, null, children));
    var expected = children;
    var actual = subject.find('.caption').prop('children');
    expect(actual).toBe(expected);
  });
  test('should omit caption node when `children` is unset', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, null));
    var actual = subject.find('.caption');
    expect(actual).toHaveLength(0);
  });
  test('should use a `Row` when `orientation="horizontal"`', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, {
      orientation: "horizontal"
    }));
    var actual = subject.find('Row.imageItem');
    expect(actual).toHaveLength(1);
  });
  test('should apply `.horizontal` when `orientation="horizontal"`', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, {
      orientation: "horizontal"
    }));
    var expected = 'horizontal';
    var actual = subject.prop('className');
    expect(actual).toContain(expected);
  });
  test('should use a `Column` when `orientation="vertical"`', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, {
      orientation: "vertical"
    }));
    var actual = subject.find('Column.imageItem');
    expect(actual).toHaveLength(1);
  });
  test('should apply `.horizontal` when `orientation="vertical"`', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, {
      orientation: "vertical"
    }));
    var expected = 'vertical';
    var actual = subject.prop('className');
    expect(actual).toContain(expected);
  });
  test('should apply `.selected` when `selected`', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, {
      selected: true
    }));
    var expected = 'selected';
    var actual = subject.prop('className');
    expect(actual).toContain(expected);
  });
  test('should pass `src` and `placeholder` to `imageComponent` as component', function () {
    var props = {
      src: 'img.png',
      placeholder: 'place.png'
    }; // Using mount() to render Img within Cell

    var subject = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, Object.assign({
      imageComponent: Img
    }, props)));
    var expected = props;
    var actual = subject.find(Img).props();
    expect(actual).toMatchObject(expected);
  });
  test('should pass `src` and `placeholder` to `imageComponent` as element', function () {
    var props = {
      src: 'img.png',
      placeholder: 'place.png'
    }; // Using mount() to render Img within Cell

    var subject = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, Object.assign({
      imageComponent: /*#__PURE__*/_react["default"].createElement(Img, null)
    }, props)));
    var expected = props;
    var actual = subject.find(Img).props();
    expect(actual).toMatchObject(expected);
  });
  test('should override `src` and `placeholder` when passing `imageComponent` as element', function () {
    var props = {
      src: 'img.png',
      placeholder: 'place.png'
    }; // Using mount() to render Img within Cell

    var subject = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, Object.assign({
      imageComponent: /*#__PURE__*/_react["default"].createElement(Img, {
        src: "my-src.png",
        placeholder: "my-place.png"
      })
    }, props)));
    var expected = props;
    var actual = subject.find(Img).props();
    expect(actual).toMatchObject(expected);
  });
  test('should support string for `src` prop', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, {
      src: src.hd
    }));
    var expected = {
      src: src.hd
    };
    var actual = subject.find('.image').props();
    expect(actual).toMatchObject(expected);
  });
  test('should support object for `src` prop', function () {
    var subject = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_ImageItem.ImageItemBase, {
      src: src
    }));
    var expected = {
      src: src
    };
    var actual = subject.find('.image').props();
    expect(actual).toMatchObject(expected);
  });
});