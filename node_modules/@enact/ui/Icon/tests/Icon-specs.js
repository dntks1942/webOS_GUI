"use strict";

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _Icon = _interopRequireDefault(require("../Icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

describe('Icon Specs', function () {
  test('should allow icon-name words to pass through', function () {
    var iconName = 'hollow_star';
    var icon = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_Icon["default"], null, iconName));
    var expected = iconName;
    var actual = icon.text();
    expect(actual).toEqual(expected);
  });
  test('should allow single-byte characters to pass through', function () {
    var iconName = '+';
    var icon = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_Icon["default"], null, iconName));
    var expected = iconName;
    var actual = icon.text();
    expect(actual).toEqual(expected);
  });
  test('should allow multi-byte characters to pass through', function () {
    var iconName = 'ó°‚ª';
    var icon = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_Icon["default"], null, iconName));
    var expected = iconName;
    var actual = icon.text();
    expect(actual).toEqual(expected);
  });
  test('should allow pre-defined icon names as an icon', function () {
    var iconName = 'factory';
    var iconGlyph = 'F';
    var iconList = {
      train: 'T',
      factory: 'F'
    };
    var icon = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
      iconList: iconList
    }, iconName));
    var expected = iconGlyph;
    var actual = icon.text();
    expect(actual).toEqual(expected);
  });
  test('should allow un-matched icon names to fall through, even when pre-defined icons exist', function () {
    var iconName = 'custom-icon-word';
    var iconList = {
      train: 'T',
      factory: 'F'
    };
    var icon = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
      iconList: iconList
    }, iconName));
    var expected = iconName;
    var actual = icon.text();
    expect(actual).toEqual(expected);
  });
  test('should allow URIs to be used as an icon', function () {
    var src = 'images/icon.png';
    var icon = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_Icon["default"], null, src));
    var expected = {
      backgroundImage: "url(".concat(src, ")")
    };
    var actual = icon.prop('style');
    expect(actual).toEqual(expected);
  });
  test('should allow URLs to be used as an icon', function () {
    var src = 'http://enactjs.com/images/logo';
    var icon = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_Icon["default"], null, src));
    var expected = {
      backgroundImage: "url(".concat(src, ")")
    };
    var actual = icon.prop('style');
    expect(actual).toEqual(expected);
  });
  test('should merge author styles with image URLs', function () {
    var src = 'images/icon.png';
    var icon = (0, _enzyme.shallow)( /*#__PURE__*/_react["default"].createElement(_Icon["default"], {
      style: {
        color: 'green'
      }
    }, src));
    var expected = {
      color: 'green',
      backgroundImage: "url(".concat(src, ")")
    };
    var actual = icon.prop('style');
    expect(actual).toEqual(expected);
  });
});