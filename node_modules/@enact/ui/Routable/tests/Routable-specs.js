"use strict";

var _enzyme = require("enzyme");

var _react = _interopRequireDefault(require("react"));

var _Link = _interopRequireDefault(require("../Link"));

var _Routable = _interopRequireDefault(require("../Routable"));

var _Route = _interopRequireDefault(require("../Route"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

describe('Routable', function () {
  test('should render nothing for a partially valid path', function () {
    function App() {
      return /*#__PURE__*/_react["default"].createElement("div", null, /*#__PURE__*/_react["default"].createElement(_Link["default"], {
        path: "./page2"
      }, "Page 2"));
    }

    function Page2() {
      return /*#__PURE__*/_react["default"].createElement("div", {
        id: "page2"
      });
    }

    var Views = (0, _Routable["default"])({
      navigate: 'onNavigate'
    }, function (_ref) {
      var children = _ref.children;
      return /*#__PURE__*/_react["default"].createElement("div", null, children);
    });

    function Sample(props) {
      var _React$useState = _react["default"].useState('/app'),
          _React$useState2 = _slicedToArray(_React$useState, 2),
          path = _React$useState2[0],
          nav = _React$useState2[1];

      var handleNavigate = _react["default"].useCallback(function (ev) {
        return nav(ev.path);
      }, [nav]);

      return /*#__PURE__*/_react["default"].createElement(Views, Object.assign({}, props, {
        path: path,
        onNavigate: handleNavigate
      }), /*#__PURE__*/_react["default"].createElement(_Route["default"], {
        path: "app",
        component: App
      }, /*#__PURE__*/_react["default"].createElement(_Route["default"], {
        path: "page2",
        component: Page2
      })));
    }

    var subject = (0, _enzyme.mount)( /*#__PURE__*/_react["default"].createElement(Sample, null));
    var expected = 1; // click once to navigate to new path

    subject.find('a').simulate('click');
    var actual = subject.find('#page2').length;
    expect(actual).toBe(expected); // clicking again should use the same base path "/app" for the same result

    subject.find('a').simulate('click');
    actual = subject.find('#page2').length;
    expect(actual).toBe(expected);
  });
});