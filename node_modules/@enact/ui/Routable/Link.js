"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Linkable = exports.LinkBase = exports.Link = exports["default"] = void 0;

var _kind = _interopRequireDefault(require("@enact/core/kind"));

var _handle = require("@enact/core/handle");

var _hoc = _interopRequireDefault(require("@enact/core/hoc"));

var _useHandlers = _interopRequireDefault(require("@enact/core/useHandlers"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _useLink = _interopRequireDefault(require("./useLink"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var LinkBase = (0, _kind["default"])({
  name: 'Link',
  propTypes: {
    path: _propTypes["default"].string.isRequired,
    disabled: _propTypes["default"].bool
  },
  defaultProps: {
    disabled: false
  },
  handlers: {
    onClick: (0, _handle.handle)((0, _handle.forProp)('disabled', false), (0, _handle.forward)('onClick'), _handle.preventDefault)
  },
  render: function render(_ref) {
    var path = _ref.path,
        rest = _objectWithoutProperties(_ref, ["path"]);

    /* eslint-disable jsx-a11y/anchor-has-content */
    return /*#__PURE__*/_react["default"].createElement("a", Object.assign({
      href: path
    }, rest));
    /* eslint-enable jsx-a11y/anchor-has-content */
  }
});
exports.LinkBase = LinkBase;
var Linkable = (0, _hoc["default"])({
  navigate: 'onClick'
}, function (config, Wrapped) {
  var navigate = config.navigate;

  var navHandlers = _defineProperty({}, navigate, (0, _handle.handle)((0, _handle.forward)(navigate), function (ev, props, hook) {
    hook.navigate(props);
  })); // eslint-disable-next-line no-shadow


  function Linkable(props) {
    var link = (0, _useLink["default"])();
    var handlers = (0, _useHandlers["default"])(navHandlers, props, link);
    return /*#__PURE__*/_react["default"].createElement(Wrapped, Object.assign({}, props, handlers));
  } // TODO: Added to maintain `ref` compatibility with 3.x. Remove in 4.0


  return /*#__PURE__*/function (_React$Component) {
    _inherits(LinkableAdapter, _React$Component);

    var _super = _createSuper(LinkableAdapter);

    function LinkableAdapter() {
      _classCallCheck(this, LinkableAdapter);

      return _super.apply(this, arguments);
    }

    _createClass(LinkableAdapter, [{
      key: "render",
      value: function render() {
        return /*#__PURE__*/_react["default"].createElement(Linkable, this.props);
      }
    }]);

    return LinkableAdapter;
  }(_react["default"].Component);
});
exports.Linkable = Linkable;
var Link = Linkable(LinkBase);
exports.Link = Link;
var _default = Link;
exports["default"] = _default;