{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActivityArranger = exports.AlwaysViewingArranger = void 0;\n\nvar _resolution = require(\"@enact/ui/resolution\");\n\nvar _Arranger = require(\"@enact/ui/ViewManager/Arranger\");\n\nvar _Breadcrumb = require(\"./Breadcrumb\");\n\nvar quadInOut = 'cubic-bezier(0.455, 0.030, 0.515, 0.955)';\nvar animationOptions = {\n  easing: quadInOut\n};\n\nvar getHorizontalTranslation = function getHorizontalTranslation(node) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var width = node.getBoundingClientRect().width;\n  return \"translateX(\".concat(width * factor, \"px)\");\n}; // Always-Viewing Arranger\n\n/**\n * Arranger that slides panels in from the right and out to the left\n *\n * @type {Arranger}\n * @private\n */\n\n\nvar AlwaysViewingArranger = {\n  enter: function enter(config) {\n    var node = config.node,\n        reverse = config.reverse;\n    var transform = getHorizontalTranslation(node);\n    return (0, _Arranger.arrange)(config, [{\n      transform: transform,\n      offset: 0\n    }, reverse ? {\n      transform: 'translateX(0)',\n      offset: 0.75\n    } : {\n      transform: transform,\n      offset: 0.25\n    }, {\n      transform: 'translateX(0)',\n      offset: 1\n    }], animationOptions);\n  },\n  leave: function leave(config) {\n    var node = config.node,\n        reverse = config.reverse;\n    var transform = getHorizontalTranslation(node, -1);\n    return (0, _Arranger.arrange)(config, [{\n      transform: 'translateX(0)',\n      offset: 0\n    }, reverse ? {\n      transform: transform,\n      offset: 0.75\n    } : {\n      transform: 'translateX(0)',\n      offset: 0.25\n    }, {\n      transform: transform,\n      offset: 1\n    }], animationOptions);\n  }\n}; // Actvity Arranger\n\n/*\n * Appends a transform that accounts for a single breadcrumb\n *\n * @param  {Node} node      DOM Node\n *\n * @returns {undefined}\n * @private\n */\n\nexports.AlwaysViewingArranger = AlwaysViewingArranger;\n\nvar offsetForBreadcrumbs = function offsetForBreadcrumbs(node) {\n  var isFirst = node && node.dataset && node.dataset.index === '0';\n  return \"translateX(\".concat(isFirst ? 0 : (0, _resolution.scale)(_Breadcrumb.breadcrumbWidth), \"px)\");\n};\n/**\n * Arranger that slides panels in from the right and out to the left allowing space for the single\n * breadcrumb when `to` index is greater than zero.\n *\n * @type {Arranger}\n * @private\n */\n\n\nvar ActivityArranger = {\n  enter: function enter(config) {\n    var node = config.node,\n        reverse = config.reverse;\n    var transform = getHorizontalTranslation(node);\n    return (0, _Arranger.arrange)(config, [{\n      transform: \"\".concat(offsetForBreadcrumbs(node), \" \").concat(transform),\n      offset: 0\n    }, reverse ? {\n      transform: offsetForBreadcrumbs(node),\n      offset: 0.75\n    } : {\n      transform: \"\".concat(offsetForBreadcrumbs(node), \" \").concat(transform),\n      offset: 0.25\n    }, {\n      transform: offsetForBreadcrumbs(node),\n      offset: 1\n    }], animationOptions);\n  },\n  leave: function leave(config) {\n    var node = config.node,\n        reverse = config.reverse;\n    var transform = getHorizontalTranslation(node, -1);\n    return (0, _Arranger.arrange)(config, [{\n      transform: offsetForBreadcrumbs(node),\n      offset: 0\n    }, reverse ? {\n      transform: transform,\n      offset: 0.75\n    } : {\n      transform: offsetForBreadcrumbs(node),\n      offset: 0.25\n    }, {\n      transform: transform,\n      offset: 1\n    }], animationOptions);\n  },\n  stay: function stay(config) {\n    var node = config.node;\n    return (0, _Arranger.arrange)(config, [{\n      transform: offsetForBreadcrumbs(node)\n    }, {\n      transform: offsetForBreadcrumbs(node)\n    }], animationOptions);\n  }\n};\nexports.ActivityArranger = ActivityArranger;","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/moonstone/Panels/Arrangers.js"],"names":["Object","defineProperty","exports","value","ActivityArranger","AlwaysViewingArranger","_resolution","require","_Arranger","_Breadcrumb","quadInOut","animationOptions","easing","getHorizontalTranslation","node","factor","arguments","length","undefined","width","getBoundingClientRect","concat","enter","config","reverse","transform","arrange","offset","leave","offsetForBreadcrumbs","isFirst","dataset","index","scale","breadcrumbWidth","stay"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ActivityArranger = exports.AlwaysViewingArranger = void 0;\n\nvar _resolution = require(\"@enact/ui/resolution\");\n\nvar _Arranger = require(\"@enact/ui/ViewManager/Arranger\");\n\nvar _Breadcrumb = require(\"./Breadcrumb\");\n\nvar quadInOut = 'cubic-bezier(0.455, 0.030, 0.515, 0.955)';\nvar animationOptions = {\n  easing: quadInOut\n};\n\nvar getHorizontalTranslation = function getHorizontalTranslation(node) {\n  var factor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var width = node.getBoundingClientRect().width;\n  return \"translateX(\".concat(width * factor, \"px)\");\n}; // Always-Viewing Arranger\n\n/**\n * Arranger that slides panels in from the right and out to the left\n *\n * @type {Arranger}\n * @private\n */\n\n\nvar AlwaysViewingArranger = {\n  enter: function enter(config) {\n    var node = config.node,\n        reverse = config.reverse;\n    var transform = getHorizontalTranslation(node);\n    return (0, _Arranger.arrange)(config, [{\n      transform: transform,\n      offset: 0\n    }, reverse ? {\n      transform: 'translateX(0)',\n      offset: 0.75\n    } : {\n      transform: transform,\n      offset: 0.25\n    }, {\n      transform: 'translateX(0)',\n      offset: 1\n    }], animationOptions);\n  },\n  leave: function leave(config) {\n    var node = config.node,\n        reverse = config.reverse;\n    var transform = getHorizontalTranslation(node, -1);\n    return (0, _Arranger.arrange)(config, [{\n      transform: 'translateX(0)',\n      offset: 0\n    }, reverse ? {\n      transform: transform,\n      offset: 0.75\n    } : {\n      transform: 'translateX(0)',\n      offset: 0.25\n    }, {\n      transform: transform,\n      offset: 1\n    }], animationOptions);\n  }\n}; // Actvity Arranger\n\n/*\n * Appends a transform that accounts for a single breadcrumb\n *\n * @param  {Node} node      DOM Node\n *\n * @returns {undefined}\n * @private\n */\n\nexports.AlwaysViewingArranger = AlwaysViewingArranger;\n\nvar offsetForBreadcrumbs = function offsetForBreadcrumbs(node) {\n  var isFirst = node && node.dataset && node.dataset.index === '0';\n  return \"translateX(\".concat(isFirst ? 0 : (0, _resolution.scale)(_Breadcrumb.breadcrumbWidth), \"px)\");\n};\n/**\n * Arranger that slides panels in from the right and out to the left allowing space for the single\n * breadcrumb when `to` index is greater than zero.\n *\n * @type {Arranger}\n * @private\n */\n\n\nvar ActivityArranger = {\n  enter: function enter(config) {\n    var node = config.node,\n        reverse = config.reverse;\n    var transform = getHorizontalTranslation(node);\n    return (0, _Arranger.arrange)(config, [{\n      transform: \"\".concat(offsetForBreadcrumbs(node), \" \").concat(transform),\n      offset: 0\n    }, reverse ? {\n      transform: offsetForBreadcrumbs(node),\n      offset: 0.75\n    } : {\n      transform: \"\".concat(offsetForBreadcrumbs(node), \" \").concat(transform),\n      offset: 0.25\n    }, {\n      transform: offsetForBreadcrumbs(node),\n      offset: 1\n    }], animationOptions);\n  },\n  leave: function leave(config) {\n    var node = config.node,\n        reverse = config.reverse;\n    var transform = getHorizontalTranslation(node, -1);\n    return (0, _Arranger.arrange)(config, [{\n      transform: offsetForBreadcrumbs(node),\n      offset: 0\n    }, reverse ? {\n      transform: transform,\n      offset: 0.75\n    } : {\n      transform: offsetForBreadcrumbs(node),\n      offset: 0.25\n    }, {\n      transform: transform,\n      offset: 1\n    }], animationOptions);\n  },\n  stay: function stay(config) {\n    var node = config.node;\n    return (0, _Arranger.arrange)(config, [{\n      transform: offsetForBreadcrumbs(node)\n    }, {\n      transform: offsetForBreadcrumbs(node)\n    }], animationOptions);\n  }\n};\nexports.ActivityArranger = ActivityArranger;"]},"metadata":{},"sourceType":"module"}