{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BreadcrumbArranger = exports[\"default\"] = void 0;\n\nvar _Arranger = require(\"@enact/ui/ViewManager/Arranger\");\n/**\n * Positions a breadcrumb based on its `data-index` and the current index, `to`\n *\n * @param  {Object} config  Arrangement configuration object\n * @returns {undefined}\n * @method\n * @private\n */\n\n\nvar positionBreadcrumb = function positionBreadcrumb(node, index) {\n  var crumbIndex = node.dataset.index;\n  var x = index - crumbIndex;\n  var pixelOffset = -x * node.getBoundingClientRect().width;\n  return \"translateX(\".concat(pixelOffset, \"px)\");\n};\n\nvar enter = function enter(config) {\n  var node = config.node,\n      from = config.from,\n      to = config.to,\n      reverse = config.reverse;\n  var keyframes = reverse ? [{\n    transform: positionBreadcrumb(node, to)\n  }, {\n    transform: positionBreadcrumb(node, from),\n    offset: 0.25\n  }, {\n    transform: positionBreadcrumb(node, from)\n  }] : [{\n    transform: positionBreadcrumb(node, from)\n  }, {\n    transform: positionBreadcrumb(node, from),\n    offset: 0.75\n  }, {\n    transform: positionBreadcrumb(node, to)\n  }];\n  return (0, _Arranger.arrange)(config, keyframes);\n};\n/**\n * Arranger for panel breadcrumbs\n *\n * @type {Arranger}\n * @private\n */\n\n\nvar BreadcrumbArranger = {\n  enter: enter,\n  stay: enter,\n  leave: enter\n};\nexports.BreadcrumbArranger = BreadcrumbArranger;\nvar _default = BreadcrumbArranger;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/moonstone/Panels/BreadcrumbArranger.js"],"names":["Object","defineProperty","exports","value","BreadcrumbArranger","_Arranger","require","positionBreadcrumb","node","index","crumbIndex","dataset","x","pixelOffset","getBoundingClientRect","width","concat","enter","config","from","to","reverse","keyframes","transform","offset","arrange","stay","leave","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,kBAAR,GAA6BF,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAAvD;;AAEA,IAAIG,SAAS,GAAGC,OAAO,CAAC,gCAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AAChE,MAAIC,UAAU,GAAGF,IAAI,CAACG,OAAL,CAAaF,KAA9B;AACA,MAAIG,CAAC,GAAGH,KAAK,GAAGC,UAAhB;AACA,MAAIG,WAAW,GAAG,CAACD,CAAD,GAAKJ,IAAI,CAACM,qBAAL,GAA6BC,KAApD;AACA,SAAO,cAAcC,MAAd,CAAqBH,WAArB,EAAkC,KAAlC,CAAP;AACD,CALD;;AAOA,IAAII,KAAK,GAAG,SAASA,KAAT,CAAeC,MAAf,EAAuB;AACjC,MAAIV,IAAI,GAAGU,MAAM,CAACV,IAAlB;AAAA,MACIW,IAAI,GAAGD,MAAM,CAACC,IADlB;AAAA,MAEIC,EAAE,GAAGF,MAAM,CAACE,EAFhB;AAAA,MAGIC,OAAO,GAAGH,MAAM,CAACG,OAHrB;AAIA,MAAIC,SAAS,GAAGD,OAAO,GAAG,CAAC;AACzBE,IAAAA,SAAS,EAAEhB,kBAAkB,CAACC,IAAD,EAAOY,EAAP;AADJ,GAAD,EAEvB;AACDG,IAAAA,SAAS,EAAEhB,kBAAkB,CAACC,IAAD,EAAOW,IAAP,CAD5B;AAEDK,IAAAA,MAAM,EAAE;AAFP,GAFuB,EAKvB;AACDD,IAAAA,SAAS,EAAEhB,kBAAkB,CAACC,IAAD,EAAOW,IAAP;AAD5B,GALuB,CAAH,GAOlB,CAAC;AACJI,IAAAA,SAAS,EAAEhB,kBAAkB,CAACC,IAAD,EAAOW,IAAP;AADzB,GAAD,EAEF;AACDI,IAAAA,SAAS,EAAEhB,kBAAkB,CAACC,IAAD,EAAOW,IAAP,CAD5B;AAEDK,IAAAA,MAAM,EAAE;AAFP,GAFE,EAKF;AACDD,IAAAA,SAAS,EAAEhB,kBAAkB,CAACC,IAAD,EAAOY,EAAP;AAD5B,GALE,CAPL;AAeA,SAAO,CAAC,GAAGf,SAAS,CAACoB,OAAd,EAAuBP,MAAvB,EAA+BI,SAA/B,CAAP;AACD,CArBD;AAsBA;AACA;AACA;AACA;AACA;AACA;;;AAGA,IAAIlB,kBAAkB,GAAG;AACvBa,EAAAA,KAAK,EAAEA,KADgB;AAEvBS,EAAAA,IAAI,EAAET,KAFiB;AAGvBU,EAAAA,KAAK,EAAEV;AAHgB,CAAzB;AAKAf,OAAO,CAACE,kBAAR,GAA6BA,kBAA7B;AACA,IAAIwB,QAAQ,GAAGxB,kBAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqB0B,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BreadcrumbArranger = exports[\"default\"] = void 0;\n\nvar _Arranger = require(\"@enact/ui/ViewManager/Arranger\");\n\n/**\n * Positions a breadcrumb based on its `data-index` and the current index, `to`\n *\n * @param  {Object} config  Arrangement configuration object\n * @returns {undefined}\n * @method\n * @private\n */\nvar positionBreadcrumb = function positionBreadcrumb(node, index) {\n  var crumbIndex = node.dataset.index;\n  var x = index - crumbIndex;\n  var pixelOffset = -x * node.getBoundingClientRect().width;\n  return \"translateX(\".concat(pixelOffset, \"px)\");\n};\n\nvar enter = function enter(config) {\n  var node = config.node,\n      from = config.from,\n      to = config.to,\n      reverse = config.reverse;\n  var keyframes = reverse ? [{\n    transform: positionBreadcrumb(node, to)\n  }, {\n    transform: positionBreadcrumb(node, from),\n    offset: 0.25\n  }, {\n    transform: positionBreadcrumb(node, from)\n  }] : [{\n    transform: positionBreadcrumb(node, from)\n  }, {\n    transform: positionBreadcrumb(node, from),\n    offset: 0.75\n  }, {\n    transform: positionBreadcrumb(node, to)\n  }];\n  return (0, _Arranger.arrange)(config, keyframes);\n};\n/**\n * Arranger for panel breadcrumbs\n *\n * @type {Arranger}\n * @private\n */\n\n\nvar BreadcrumbArranger = {\n  enter: enter,\n  stay: enter,\n  leave: enter\n};\nexports.BreadcrumbArranger = BreadcrumbArranger;\nvar _default = BreadcrumbArranger;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}