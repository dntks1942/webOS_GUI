{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.$L = $L;\nexports.clearResBundle = clearResBundle;\nexports.createResBundle = createResBundle;\nexports.setResBundle = setResBundle;\nexports[\"default\"] = void 0;\n\nvar _resBundle = require(\"@enact/i18n/src/resBundle\");\n\nvar _ResBundle = _interopRequireDefault(require(\"ilib/lib/ResBundle\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // The ilib.ResBundle for the active locale used by $L\n\n\nvar resBundle;\n/**\n * Returns the current ilib.ResBundle\n *\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\nfunction getResBundle() {\n  return resBundle;\n}\n/**\n * Creates a new ilib.ResBundle for string translation\n *\n * @param  {ilib.Locale} locale Locale for ResBundle\n *\n * @returns {Promise|ResBundle} Resolves with a new ilib.ResBundle\n */\n\n\nfunction createResBundle(options) {\n  var opts = options;\n\n  if (typeof ILIB_MOONSTONE_PATH !== 'undefined') {\n    opts.basePath = ILIB_MOONSTONE_PATH;\n  }\n\n  if (!opts.onLoad) return; // eslint-disable-next-line no-new\n\n  new _ResBundle[\"default\"](_objectSpread(_objectSpread({}, opts), {}, {\n    onLoad: function onLoad(bundle) {\n      opts.onLoad(bundle || null);\n    }\n  }));\n}\n/**\n * Deletes the current bundle object of strings.\n * @returns {undefined}\n */\n\n\nfunction clearResBundle() {\n  delete _ResBundle[\"default\"].strings;\n  delete _ResBundle[\"default\"].sysres;\n  resBundle = null;\n}\n/**\n * Set the locale for the strings that $L loads. This may reload the\n * string resources if necessary.\n *\n * @param {string} spec the locale specifier\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\n\nfunction setResBundle(bundle) {\n  return resBundle = bundle;\n}\n\nfunction toIString(str) {\n  var rb = getResBundle();\n\n  if (!rb) {\n    createResBundle({\n      sync: true,\n      onLoad: setResBundle\n    });\n    rb = getResBundle();\n  }\n\n  return (0, _resBundle.getIStringFromBundle)(str, rb);\n}\n/**\n * Maps a string or key/value object to a translated string for the current locale.\n *\n * @function\n * @memberof i18n/$L\n * @param  {String|Object} str Source string\n *\n * @returns {String} The translated string\n */\n\n\nfunction $L(str) {\n  return String(toIString(str));\n}\n\nvar _default = $L;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/moonstone/internal/$L/$L.js"],"names":["Object","defineProperty","exports","value","$L","clearResBundle","createResBundle","setResBundle","_resBundle","require","_ResBundle","_interopRequireDefault","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","resBundle","getResBundle","options","opts","ILIB_MOONSTONE_PATH","basePath","onLoad","bundle","strings","sysres","toIString","str","rb","sync","getIStringFromBundle","String","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.$L = $L;\nexports.clearResBundle = clearResBundle;\nexports.createResBundle = createResBundle;\nexports.setResBundle = setResBundle;\nexports[\"default\"] = void 0;\n\nvar _resBundle = require(\"@enact/i18n/src/resBundle\");\n\nvar _ResBundle = _interopRequireDefault(require(\"ilib/lib/ResBundle\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// The ilib.ResBundle for the active locale used by $L\nvar resBundle;\n/**\n * Returns the current ilib.ResBundle\n *\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\nfunction getResBundle() {\n  return resBundle;\n}\n/**\n * Creates a new ilib.ResBundle for string translation\n *\n * @param  {ilib.Locale} locale Locale for ResBundle\n *\n * @returns {Promise|ResBundle} Resolves with a new ilib.ResBundle\n */\n\n\nfunction createResBundle(options) {\n  var opts = options;\n\n  if (typeof ILIB_MOONSTONE_PATH !== 'undefined') {\n    opts.basePath = ILIB_MOONSTONE_PATH;\n  }\n\n  if (!opts.onLoad) return; // eslint-disable-next-line no-new\n\n  new _ResBundle[\"default\"](_objectSpread(_objectSpread({}, opts), {}, {\n    onLoad: function onLoad(bundle) {\n      opts.onLoad(bundle || null);\n    }\n  }));\n}\n/**\n * Deletes the current bundle object of strings.\n * @returns {undefined}\n */\n\n\nfunction clearResBundle() {\n  delete _ResBundle[\"default\"].strings;\n  delete _ResBundle[\"default\"].sysres;\n  resBundle = null;\n}\n/**\n * Set the locale for the strings that $L loads. This may reload the\n * string resources if necessary.\n *\n * @param {string} spec the locale specifier\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\n\nfunction setResBundle(bundle) {\n  return resBundle = bundle;\n}\n\nfunction toIString(str) {\n  var rb = getResBundle();\n\n  if (!rb) {\n    createResBundle({\n      sync: true,\n      onLoad: setResBundle\n    });\n    rb = getResBundle();\n  }\n\n  return (0, _resBundle.getIStringFromBundle)(str, rb);\n}\n/**\n * Maps a string or key/value object to a translated string for the current locale.\n *\n * @function\n * @memberof i18n/$L\n * @param  {String|Object} str Source string\n *\n * @returns {String} The translated string\n */\n\n\nfunction $L(str) {\n  return String(toIString(str));\n}\n\nvar _default = $L;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}