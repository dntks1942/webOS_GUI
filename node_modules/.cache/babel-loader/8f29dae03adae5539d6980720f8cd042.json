{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Route = exports[\"default\"] = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"@enact/core/internal/prop-types\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Used with {@link ui/Routable.Routable} to define the `path` segment and the\n * `component` to render.\n *\n *`Route` elements can be nested to build multiple level paths.\n *\n * In the below example, `Panels` would render `SettingsPanel` with breadcrumbs to\n * navigate `AppPanel` and `HomePanel`.\n *\n * ```\n *\t<Panels path=\"/app/home/settings\" onSelectBreadcrumb={this.handleNavigate}>\n *\t\t<Route path=\"app\" component={AppPanel}>\n *\t\t\t<Route path=\"home\" component={HomePanel}>\n *\t\t\t\t<Route path=\"settings\" component={SettingsPanel} />\n *\t\t\t</Route>\n *\t\t</Route>\n *\t\t<Route path=\"admin\" component={AdminPanel} />\n *\t\t<Route path=\"help\" component={HelpPanel} />\n *\t</Panels>\n * ```\n *\n * @class Route\n * @ui\n * @memberof ui/Routable\n * @public\n */\n\n\nvar Route = function Route() {\n  return null;\n};\n\nexports.Route = Route;\nRoute.propTypes = {\n  /**\n   * The component to render when the `path` for this Route matches the path of the\n   * {@link ui/Routable.Routable} container.\n   *\n   * @type {String|Component}\n   * @required\n   * @public\n   * @memberof ui/Routable.Route.prototype\n   */\n  component: _propTypes[\"default\"].renderable.isRequired,\n\n  /**\n   * The name of the path segment.\n   *\n   * @type {String}\n   * @required\n   * @public\n   * @memberof ui/Routable.Route.prototype\n   */\n  path: _propTypes2[\"default\"].string.isRequired\n};\nvar _default = Route;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/ui/Routable/Route.js"],"names":["Object","defineProperty","exports","value","Route","_propTypes","_interopRequireDefault","require","_propTypes2","obj","__esModule","propTypes","component","renderable","isRequired","path","string","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1C;;AAEA,IAAIG,UAAU,GAAGC,sBAAsB,CAACC,OAAO,CAAC,iCAAD,CAAR,CAAvC;;AAEA,IAAIC,WAAW,GAAGF,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAxC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIL,KAAK,GAAG,SAASA,KAAT,GAAiB;AAC3B,SAAO,IAAP;AACD,CAFD;;AAIAF,OAAO,CAACE,KAAR,GAAgBA,KAAhB;AACAA,KAAK,CAACO,SAAN,GAAkB;AAChB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,SAAS,EAAEP,UAAU,CAAC,SAAD,CAAV,CAAsBQ,UAAtB,CAAiCC,UAV5B;;AAYhB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,IAAI,EAAEP,WAAW,CAAC,SAAD,CAAX,CAAuBQ,MAAvB,CAA8BF;AApBpB,CAAlB;AAsBA,IAAIG,QAAQ,GAAGb,KAAf;AACAF,OAAO,CAAC,SAAD,CAAP,GAAqBe,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Route = exports[\"default\"] = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"@enact/core/internal/prop-types\"));\n\nvar _propTypes2 = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Used with {@link ui/Routable.Routable} to define the `path` segment and the\n * `component` to render.\n *\n *`Route` elements can be nested to build multiple level paths.\n *\n * In the below example, `Panels` would render `SettingsPanel` with breadcrumbs to\n * navigate `AppPanel` and `HomePanel`.\n *\n * ```\n *\t<Panels path=\"/app/home/settings\" onSelectBreadcrumb={this.handleNavigate}>\n *\t\t<Route path=\"app\" component={AppPanel}>\n *\t\t\t<Route path=\"home\" component={HomePanel}>\n *\t\t\t\t<Route path=\"settings\" component={SettingsPanel} />\n *\t\t\t</Route>\n *\t\t</Route>\n *\t\t<Route path=\"admin\" component={AdminPanel} />\n *\t\t<Route path=\"help\" component={HelpPanel} />\n *\t</Panels>\n * ```\n *\n * @class Route\n * @ui\n * @memberof ui/Routable\n * @public\n */\nvar Route = function Route() {\n  return null;\n};\n\nexports.Route = Route;\nRoute.propTypes = {\n  /**\n   * The component to render when the `path` for this Route matches the path of the\n   * {@link ui/Routable.Routable} container.\n   *\n   * @type {String|Component}\n   * @required\n   * @public\n   * @memberof ui/Routable.Route.prototype\n   */\n  component: _propTypes[\"default\"].renderable.isRequired,\n\n  /**\n   * The name of the path segment.\n   *\n   * @type {String}\n   * @required\n   * @public\n   * @memberof ui/Routable.Route.prototype\n   */\n  path: _propTypes2[\"default\"].string.isRequired\n};\nvar _default = Route;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}