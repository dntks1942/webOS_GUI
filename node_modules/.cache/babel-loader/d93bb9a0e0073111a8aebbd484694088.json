{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"useSlots\", {\n  enumerable: true,\n  get: function get() {\n    return _useSlots[\"default\"];\n  }\n});\nexports.Slottable = exports[\"default\"] = void 0;\n\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _useSlots = _interopRequireDefault(require(\"./useSlots\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * Provides a higher-order component that render child components into pre-designated slots.\n *\n * See [SlotItem]{@link ui/SlotItem.SlotItemDecorator} for the use of `Slottable`.\n *\n * @module ui/Slottable\n * @exports Slottable\n */\n\n/**\n * Default config for `Slottable`.\n *\n * @memberof ui/Slottable.Slottable\n * @hocconfig\n * @public\n */\n\n\nvar defaultConfig = {\n  /**\n   * Array of slot names which will be extracted from `children` and distributed to props.\n   *\n   * @type {String[]}\n   * @memberof ui/Slottable.Slottable.defaultConfig\n   */\n  slots: null\n};\n/**\n * A higher-order component that allows wrapped components to separate children into pre-designated 'slots'.\n *\n * To use `Slottable`, you must configure it by passing in a config object with the `slots` member set to an\n * array of slot names.  Any children whose `slot` or `defaultSlot` property matches a named slot or whose\n * type matches a named slot will be placed into a property of the same name on the wrapped component.\n *\n * @class Slottable\n * @memberof ui/Slottable\n * @hoc\n * @public\n */\n\nvar Slottable = (0, _hoc[\"default\"])(defaultConfig, function (config, Wrapped) {\n  var slots = config.slots; // eslint-disable-next-line no-shadow\n\n  return function Slottable(props) {\n    // extract the slots into a new object but populating the default value to be undefined so\n    // the key exists in order to allow the current \"harmful\" behavior below. Must be undefined\n    // in order to trigger defaultProps on downstream components.\n    var slotProps = {\n      children: props.children\n    };\n    slots.forEach(function (k) {\n      return slotProps[k] = undefined;\n    }); // eslint-disable-line no-undefined\n    // Slottable allows there to be other values in the destination slot and merges them.\n    // However, consumers can't avoid key warnings when merging the two lists so we should\n    // \"consider this harmful\" and not continue to support this with the hook and instead\n    // encourage using the slot as the default with the prop as a fallback as implemented by the\n    // hook.\n\n    var distributed = (0, _useSlots[\"default\"])(slotProps);\n    slots.forEach(function (slot) {\n      var dist = distributed[slot];\n      var prop = props[slot];\n\n      if (prop != null && dist != null) {\n        distributed[slot] = [].concat(prop, dist);\n      } else if (prop != null) {\n        distributed[slot] = prop;\n      }\n    });\n    return /*#__PURE__*/_react[\"default\"].createElement(Wrapped, Object.assign({}, props, distributed));\n  };\n});\nexports.Slottable = Slottable;\nvar _default = Slottable;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/ui/Slottable/Slottable.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_useSlots","Slottable","_hoc","_interopRequireDefault","require","_react","obj","__esModule","defaultConfig","slots","config","Wrapped","props","slotProps","children","forEach","k","undefined","distributed","slot","dist","prop","concat","createElement","assign","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAH,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,UAA/B,EAA2C;AACzCE,EAAAA,UAAU,EAAE,IAD6B;AAEzCC,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,WAAOC,SAAS,CAAC,SAAD,CAAhB;AACD;AAJwC,CAA3C;AAMAJ,OAAO,CAACK,SAAR,GAAoBL,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA9C;;AAEA,IAAIM,IAAI,GAAGC,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAjC;;AAEA,IAAIC,MAAM,GAAGF,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIJ,SAAS,GAAGG,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC;;AAEA,SAASD,sBAAT,CAAgCG,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;AAEjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,IAAIE,aAAa,GAAG;AAClB;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,KAAK,EAAE;AAPW,CAApB;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIR,SAAS,GAAG,CAAC,GAAGC,IAAI,CAAC,SAAD,CAAR,EAAqBM,aAArB,EAAoC,UAAUE,MAAV,EAAkBC,OAAlB,EAA2B;AAC7E,MAAIF,KAAK,GAAGC,MAAM,CAACD,KAAnB,CAD6E,CACnD;;AAE1B,SAAO,SAASR,SAAT,CAAmBW,KAAnB,EAA0B;AAC/B;AACA;AACA;AACA,QAAIC,SAAS,GAAG;AACdC,MAAAA,QAAQ,EAAEF,KAAK,CAACE;AADF,KAAhB;AAGAL,IAAAA,KAAK,CAACM,OAAN,CAAc,UAAUC,CAAV,EAAa;AACzB,aAAOH,SAAS,CAACG,CAAD,CAAT,GAAeC,SAAtB;AACD,KAFD,EAP+B,CAS3B;AACJ;AACA;AACA;AACA;AACA;;AAEA,QAAIC,WAAW,GAAG,CAAC,GAAGlB,SAAS,CAAC,SAAD,CAAb,EAA0Ba,SAA1B,CAAlB;AACAJ,IAAAA,KAAK,CAACM,OAAN,CAAc,UAAUI,IAAV,EAAgB;AAC5B,UAAIC,IAAI,GAAGF,WAAW,CAACC,IAAD,CAAtB;AACA,UAAIE,IAAI,GAAGT,KAAK,CAACO,IAAD,CAAhB;;AAEA,UAAIE,IAAI,IAAI,IAAR,IAAgBD,IAAI,IAAI,IAA5B,EAAkC;AAChCF,QAAAA,WAAW,CAACC,IAAD,CAAX,GAAoB,GAAGG,MAAH,CAAUD,IAAV,EAAgBD,IAAhB,CAApB;AACD,OAFD,MAEO,IAAIC,IAAI,IAAI,IAAZ,EAAkB;AACvBH,QAAAA,WAAW,CAACC,IAAD,CAAX,GAAoBE,IAApB;AACD;AACF,KATD;AAUA,WAAO,aAAahB,MAAM,CAAC,SAAD,CAAN,CAAkBkB,aAAlB,CAAgCZ,OAAhC,EAAyCjB,MAAM,CAAC8B,MAAP,CAAc,EAAd,EAAkBZ,KAAlB,EAAyBM,WAAzB,CAAzC,CAApB;AACD,GA5BD;AA6BD,CAhCe,CAAhB;AAiCAtB,OAAO,CAACK,SAAR,GAAoBA,SAApB;AACA,IAAIwB,QAAQ,GAAGxB,SAAf;AACAL,OAAO,CAAC,SAAD,CAAP,GAAqB6B,QAArB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"useSlots\", {\n  enumerable: true,\n  get: function get() {\n    return _useSlots[\"default\"];\n  }\n});\nexports.Slottable = exports[\"default\"] = void 0;\n\nvar _hoc = _interopRequireDefault(require(\"@enact/core/hoc\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _useSlots = _interopRequireDefault(require(\"./useSlots\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * Provides a higher-order component that render child components into pre-designated slots.\n *\n * See [SlotItem]{@link ui/SlotItem.SlotItemDecorator} for the use of `Slottable`.\n *\n * @module ui/Slottable\n * @exports Slottable\n */\n\n/**\n * Default config for `Slottable`.\n *\n * @memberof ui/Slottable.Slottable\n * @hocconfig\n * @public\n */\nvar defaultConfig = {\n  /**\n   * Array of slot names which will be extracted from `children` and distributed to props.\n   *\n   * @type {String[]}\n   * @memberof ui/Slottable.Slottable.defaultConfig\n   */\n  slots: null\n};\n/**\n * A higher-order component that allows wrapped components to separate children into pre-designated 'slots'.\n *\n * To use `Slottable`, you must configure it by passing in a config object with the `slots` member set to an\n * array of slot names.  Any children whose `slot` or `defaultSlot` property matches a named slot or whose\n * type matches a named slot will be placed into a property of the same name on the wrapped component.\n *\n * @class Slottable\n * @memberof ui/Slottable\n * @hoc\n * @public\n */\n\nvar Slottable = (0, _hoc[\"default\"])(defaultConfig, function (config, Wrapped) {\n  var slots = config.slots; // eslint-disable-next-line no-shadow\n\n  return function Slottable(props) {\n    // extract the slots into a new object but populating the default value to be undefined so\n    // the key exists in order to allow the current \"harmful\" behavior below. Must be undefined\n    // in order to trigger defaultProps on downstream components.\n    var slotProps = {\n      children: props.children\n    };\n    slots.forEach(function (k) {\n      return slotProps[k] = undefined;\n    }); // eslint-disable-line no-undefined\n    // Slottable allows there to be other values in the destination slot and merges them.\n    // However, consumers can't avoid key warnings when merging the two lists so we should\n    // \"consider this harmful\" and not continue to support this with the hook and instead\n    // encourage using the slot as the default with the prop as a fallback as implemented by the\n    // hook.\n\n    var distributed = (0, _useSlots[\"default\"])(slotProps);\n    slots.forEach(function (slot) {\n      var dist = distributed[slot];\n      var prop = props[slot];\n\n      if (prop != null && dist != null) {\n        distributed[slot] = [].concat(prop, dist);\n      } else if (prop != null) {\n        distributed[slot] = prop;\n      }\n    });\n    return /*#__PURE__*/_react[\"default\"].createElement(Wrapped, Object.assign({}, props, distributed));\n  };\n});\nexports.Slottable = Slottable;\nvar _default = Slottable;\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"module"}