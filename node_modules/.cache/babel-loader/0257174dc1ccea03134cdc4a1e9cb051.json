{"ast":null,"code":"/* eslint no-var: off, no-extend-native: off */\n\n/*\n *  polyfills.js\n *\n *  Any polyfills or code required prior to loading the app.\n */\nif (!global.skipPolyfills && !global._babelPolyfill) {\n  // Temporarily remap [Array].toLocaleString to [Array].toString.\n  // Fixes an issue with loading the polyfills within the v8 snapshot environment\n  // where toLocaleString() within the TypedArray polyfills causes snapshot failure.\n  var origToLocaleString = Array.prototype.toLocaleString,\n      origTypedToLocaleString;\n  Array.prototype.toLocaleString = Array.prototype.toString;\n\n  if (global.Int8Array && Int8Array.prototype.toLocaleString) {\n    origTypedToLocaleString = Int8Array.prototype.toLocaleString;\n    Int8Array.prototype.toLocaleString = Int8Array.prototype.toString;\n  } // Apply core-js polyfills\n\n\n  require('./corejs-proxy'); // Restore real [Array].toLocaleString for runtime usage.\n\n\n  if (origToLocaleString) Array.prototype.toLocaleString = origToLocaleString;\n  if (origTypedToLocaleString) Int8Array.prototype.toLocaleString = origTypedToLocaleString;\n}","map":{"version":3,"sources":["/usr/local/lib/node_modules/@enact/cli/config/polyfills.js"],"names":["global","skipPolyfills","_babelPolyfill","origToLocaleString","Array","prototype","toLocaleString","origTypedToLocaleString","toString","Int8Array","require"],"mappings":"AAAA;;AACA;AACA;AACA;AACA;AACA;AAEA,IAAI,CAACA,MAAM,CAACC,aAAR,IAAyB,CAACD,MAAM,CAACE,cAArC,EAAqD;AACpD;AACA;AACA;AACA,MAAIC,kBAAkB,GAAGC,KAAK,CAACC,SAAN,CAAgBC,cAAzC;AAAA,MACCC,uBADD;AAEAH,EAAAA,KAAK,CAACC,SAAN,CAAgBC,cAAhB,GAAiCF,KAAK,CAACC,SAAN,CAAgBG,QAAjD;;AACA,MAAIR,MAAM,CAACS,SAAP,IAAoBA,SAAS,CAACJ,SAAV,CAAoBC,cAA5C,EAA4D;AAC3DC,IAAAA,uBAAuB,GAAGE,SAAS,CAACJ,SAAV,CAAoBC,cAA9C;AACAG,IAAAA,SAAS,CAACJ,SAAV,CAAoBC,cAApB,GAAqCG,SAAS,CAACJ,SAAV,CAAoBG,QAAzD;AACA,GAVmD,CAYpD;;;AACAE,EAAAA,OAAO,CAAC,gBAAD,CAAP,CAboD,CAepD;;;AACA,MAAIP,kBAAJ,EAAwBC,KAAK,CAACC,SAAN,CAAgBC,cAAhB,GAAiCH,kBAAjC;AACxB,MAAII,uBAAJ,EAA6BE,SAAS,CAACJ,SAAV,CAAoBC,cAApB,GAAqCC,uBAArC;AAC7B","sourcesContent":["/* eslint no-var: off, no-extend-native: off */\n/*\n *  polyfills.js\n *\n *  Any polyfills or code required prior to loading the app.\n */\n\nif (!global.skipPolyfills && !global._babelPolyfill) {\n\t// Temporarily remap [Array].toLocaleString to [Array].toString.\n\t// Fixes an issue with loading the polyfills within the v8 snapshot environment\n\t// where toLocaleString() within the TypedArray polyfills causes snapshot failure.\n\tvar origToLocaleString = Array.prototype.toLocaleString,\n\t\torigTypedToLocaleString;\n\tArray.prototype.toLocaleString = Array.prototype.toString;\n\tif (global.Int8Array && Int8Array.prototype.toLocaleString) {\n\t\torigTypedToLocaleString = Int8Array.prototype.toLocaleString;\n\t\tInt8Array.prototype.toLocaleString = Int8Array.prototype.toString;\n\t}\n\n\t// Apply core-js polyfills\n\trequire('./corejs-proxy');\n\n\t// Restore real [Array].toLocaleString for runtime usage.\n\tif (origToLocaleString) Array.prototype.toLocaleString = origToLocaleString;\n\tif (origTypedToLocaleString) Int8Array.prototype.toLocaleString = origTypedToLocaleString;\n}\n"]},"metadata":{},"sourceType":"module"}