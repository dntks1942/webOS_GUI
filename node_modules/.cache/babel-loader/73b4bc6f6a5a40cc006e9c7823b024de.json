{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNonLatinLocale = isNonLatinLocale;\nexports.isRtlLocale = isRtlLocale;\nexports.updateLocale = void 0;\n\nvar _ilib = _interopRequireDefault(require(\"ilib\"));\n\nvar _LocaleInfo = _interopRequireDefault(require(\"ilib/lib/LocaleInfo\"));\n\nvar _ScriptInfo = _interopRequireDefault(require(\"ilib/lib/ScriptInfo\"));\n\nvar _case = require(\"../src/case\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n} // Returns `true` if a locale list is provided and it includes either the language (the first part\n// of the spec e.g. ko) or the entire spec (e.g. ko-KR)\n\n\nvar includesLocale = function includesLocale(localeList, locale) {\n  return Array.isArray(localeList) && (localeList.includes(locale.getLanguage()) || localeList.includes(locale.toString()));\n};\n/**\n * Tell whether or not the given locale is considered a non-Latin locale for webOS purposes. This\n * controls which fonts are used in various places to show the various languages. An undefined spec\n * parameter means to test the current locale.\n *\n * @memberof i18n/locale\n * @param {ilib.Locale|string|undefined} spec locale specifier or locale object of the locale to\n *\ttest, or undefined to test the current locale\n * @param {Object} [options] An object configuring the request. Must include an `onLoad` member to\n *                           receive the result.\n */\n\n\nfunction isNonLatinLocale(spec) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _onLoad = options.onLoad,\n      latinLanguageOverrides = options.latinLanguageOverrides,\n      nonLatinLanguageOverrides = options.nonLatinLanguageOverrides,\n      rest = _objectWithoutProperties(options, [\"onLoad\", \"latinLanguageOverrides\", \"nonLatinLanguageOverrides\"]);\n\n  if (!_onLoad) return; // eslint-disable-next-line no-new\n\n  new _LocaleInfo[\"default\"](spec, _objectSpread(_objectSpread({}, rest), {}, {\n    onLoad: function onLoad(li) {\n      var locale = li.getLocale();\n\n      _onLoad( // the language actually is non-latin and should not be treated as latin\n      li.getScript() !== 'Latn' && !includesLocale(latinLanguageOverrides, locale) || // the language is latin but should be treated as non-latin\n      includesLocale(nonLatinLanguageOverrides, locale));\n    }\n  }));\n}\n/**\n * Determines if current locale is a right-to-left locale.\n *\n * @memberof i18n/locale\n * @param {Object} [options] An object configuring the request. Must include an `onLoad` member to\n *                           receive the result.\n */\n\n\nfunction isRtlLocale() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _onLoad2 = options.onLoad,\n      sync = options.sync;\n  if (!_onLoad2) return; // eslint-disable-next-line no-new\n\n  new _LocaleInfo[\"default\"](_ilib[\"default\"].getLocale(), _objectSpread(_objectSpread({}, options), {}, {\n    onLoad: function onLoad(li) {\n      var scriptName = li.getScript(); // eslint-disable-next-line no-new\n\n      new _ScriptInfo[\"default\"](scriptName, {\n        sync: sync,\n        onLoad: function onLoad(script) {\n          _onLoad2(script.getScriptDirection() === 'rtl');\n        }\n      });\n    }\n  }));\n}\n/**\n * This Enact hook lets us know that the system locale has changed and gives\n * us a chance to update the iLib locale before Enact broadcasts its\n * `onlocalechange` signal.\n * Provide a locale string, like 'en-US' or 'ja-JP', to conveniently set\n * that locale immediately. Provide nothing, and reset the locale back to the\n * browser's default language.\n *\n * @memberof i18n/locale\n * @param {String} locale Locale identifier\n * @returns {undefined}\n */\n\n\nvar updateLocale = function updateLocale(locale) {\n  // blow away the cache to force it to reload the manifest files for the new app\n  // eslint-disable-next-line no-undefined\n  if (_ilib[\"default\"]._load) _ilib[\"default\"]._load.manifest = undefined; // remove the cache of the platform name to allow transition between snapshot and browser\n\n  delete _ilib[\"default\"]._platform; // load any external ilib/resbundle data\n\n  _ilib[\"default\"].data = global.ilibData || _ilib[\"default\"].data;\n  _ilib[\"default\"].data.cache = _ilib[\"default\"].data.cache || {};\n  _ilib[\"default\"].data.cache['ResBundle-strings'] = global.resBundleData || {}; // ilib handles falsy values and automatically uses local locale when encountered which\n  // is expected and desired\n\n  _ilib[\"default\"].setLocale(locale);\n\n  var newLocale = _ilib[\"default\"].getLocale(); // Recreate the case mappers to use the just-recently-set locale\n\n\n  (0, _case.initCaseMappers)();\n  return newLocale;\n};\n\nexports.updateLocale = updateLocale;","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/i18n/locale/locale.js"],"names":["Object","defineProperty","exports","value","isNonLatinLocale","isRtlLocale","updateLocale","_ilib","_interopRequireDefault","require","_LocaleInfo","_ScriptInfo","_case","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call","sourceKeys","includesLocale","localeList","locale","Array","isArray","includes","getLanguage","toString","spec","options","undefined","_onLoad","onLoad","latinLanguageOverrides","nonLatinLanguageOverrides","rest","li","getLocale","getScript","_onLoad2","sync","scriptName","script","getScriptDirection","_load","manifest","_platform","data","global","ilibData","cache","resBundleData","setLocale","newLocale","initCaseMappers"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isNonLatinLocale = isNonLatinLocale;\nexports.isRtlLocale = isRtlLocale;\nexports.updateLocale = void 0;\n\nvar _ilib = _interopRequireDefault(require(\"ilib\"));\n\nvar _LocaleInfo = _interopRequireDefault(require(\"ilib/lib/LocaleInfo\"));\n\nvar _ScriptInfo = _interopRequireDefault(require(\"ilib/lib/ScriptInfo\"));\n\nvar _case = require(\"../src/case\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n// Returns `true` if a locale list is provided and it includes either the language (the first part\n// of the spec e.g. ko) or the entire spec (e.g. ko-KR)\nvar includesLocale = function includesLocale(localeList, locale) {\n  return Array.isArray(localeList) && (localeList.includes(locale.getLanguage()) || localeList.includes(locale.toString()));\n};\n/**\n * Tell whether or not the given locale is considered a non-Latin locale for webOS purposes. This\n * controls which fonts are used in various places to show the various languages. An undefined spec\n * parameter means to test the current locale.\n *\n * @memberof i18n/locale\n * @param {ilib.Locale|string|undefined} spec locale specifier or locale object of the locale to\n *\ttest, or undefined to test the current locale\n * @param {Object} [options] An object configuring the request. Must include an `onLoad` member to\n *                           receive the result.\n */\n\n\nfunction isNonLatinLocale(spec) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _onLoad = options.onLoad,\n      latinLanguageOverrides = options.latinLanguageOverrides,\n      nonLatinLanguageOverrides = options.nonLatinLanguageOverrides,\n      rest = _objectWithoutProperties(options, [\"onLoad\", \"latinLanguageOverrides\", \"nonLatinLanguageOverrides\"]);\n\n  if (!_onLoad) return; // eslint-disable-next-line no-new\n\n  new _LocaleInfo[\"default\"](spec, _objectSpread(_objectSpread({}, rest), {}, {\n    onLoad: function onLoad(li) {\n      var locale = li.getLocale();\n\n      _onLoad( // the language actually is non-latin and should not be treated as latin\n      li.getScript() !== 'Latn' && !includesLocale(latinLanguageOverrides, locale) || // the language is latin but should be treated as non-latin\n      includesLocale(nonLatinLanguageOverrides, locale));\n    }\n  }));\n}\n/**\n * Determines if current locale is a right-to-left locale.\n *\n * @memberof i18n/locale\n * @param {Object} [options] An object configuring the request. Must include an `onLoad` member to\n *                           receive the result.\n */\n\n\nfunction isRtlLocale() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _onLoad2 = options.onLoad,\n      sync = options.sync;\n  if (!_onLoad2) return; // eslint-disable-next-line no-new\n\n  new _LocaleInfo[\"default\"](_ilib[\"default\"].getLocale(), _objectSpread(_objectSpread({}, options), {}, {\n    onLoad: function onLoad(li) {\n      var scriptName = li.getScript(); // eslint-disable-next-line no-new\n\n      new _ScriptInfo[\"default\"](scriptName, {\n        sync: sync,\n        onLoad: function onLoad(script) {\n          _onLoad2(script.getScriptDirection() === 'rtl');\n        }\n      });\n    }\n  }));\n}\n/**\n * This Enact hook lets us know that the system locale has changed and gives\n * us a chance to update the iLib locale before Enact broadcasts its\n * `onlocalechange` signal.\n * Provide a locale string, like 'en-US' or 'ja-JP', to conveniently set\n * that locale immediately. Provide nothing, and reset the locale back to the\n * browser's default language.\n *\n * @memberof i18n/locale\n * @param {String} locale Locale identifier\n * @returns {undefined}\n */\n\n\nvar updateLocale = function updateLocale(locale) {\n  // blow away the cache to force it to reload the manifest files for the new app\n  // eslint-disable-next-line no-undefined\n  if (_ilib[\"default\"]._load) _ilib[\"default\"]._load.manifest = undefined; // remove the cache of the platform name to allow transition between snapshot and browser\n\n  delete _ilib[\"default\"]._platform; // load any external ilib/resbundle data\n\n  _ilib[\"default\"].data = global.ilibData || _ilib[\"default\"].data;\n  _ilib[\"default\"].data.cache = _ilib[\"default\"].data.cache || {};\n  _ilib[\"default\"].data.cache['ResBundle-strings'] = global.resBundleData || {}; // ilib handles falsy values and automatically uses local locale when encountered which\n  // is expected and desired\n\n  _ilib[\"default\"].setLocale(locale);\n\n  var newLocale = _ilib[\"default\"].getLocale(); // Recreate the case mappers to use the just-recently-set locale\n\n\n  (0, _case.initCaseMappers)();\n  return newLocale;\n};\n\nexports.updateLocale = updateLocale;"]},"metadata":{},"sourceType":"module"}