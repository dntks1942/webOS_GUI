{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearResBundle = clearResBundle;\nexports.createResBundle = createResBundle;\nexports.getIStringFromBundle = getIStringFromBundle;\nexports.getResBundle = getResBundle;\nexports.setResBundle = setResBundle;\n\nvar _IString = _interopRequireDefault(require(\"ilib/lib/IString\"));\n\nvar _ResBundle = _interopRequireDefault(require(\"ilib/lib/ResBundle\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // The ilib.ResBundle for the active locale used by $L\n\n\nvar resBundle;\n/**\n * Returns the current ilib.ResBundle\n *\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\nfunction getResBundle() {\n  return resBundle;\n}\n/**\n * Creates a new ilib.ResBundle for string translation\n *\n * @param  {ilib.Locale} locale Locale for ResBundle\n *\n * @returns {Promise|ResBundle} Resolves with a new ilib.ResBundle\n */\n\n\nfunction createResBundle(options) {\n  var opts = _objectSpread({\n    type: 'html',\n    name: 'strings',\n    lengthen: true\n  }, options);\n\n  if (!opts.onLoad) return; // eslint-disable-next-line no-new\n\n  new _ResBundle[\"default\"](_objectSpread(_objectSpread({}, opts), {}, {\n    onLoad: function onLoad(bundle) {\n      opts.onLoad(bundle || null);\n    }\n  }));\n}\n/**\n * Set the locale for the strings that $L loads. This may reload the\n * string resources if necessary.\n *\n * @param {string} spec the locale specifier\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\n\nfunction setResBundle(bundle) {\n  return resBundle = bundle;\n}\n/**\n * Deletes the current bundle object of strings and clears the cache.\n * @returns {undefined}\n */\n\n\nfunction clearResBundle() {\n  delete _ResBundle[\"default\"].strings;\n  delete _ResBundle[\"default\"].sysres;\n  resBundle = null;\n}\n/**\n * Retrieves an IString from a resource bundle by key.\n *\n * If the bundle doesn't exist, the key is returned wrapped by IString.\n *\n * @param {String|Object} str Key for localized string\n * @param {ResBundl} rb ilib resource bundle\n * @returns\t{IString} The string value wrapped by an IString\n */\n\n\nfunction getIStringFromBundle(str, rb) {\n  var isObject = typeof str === 'object';\n\n  if (rb) {\n    return isObject ? rb.getString(str.value, str.key) : rb.getString(str);\n  }\n\n  return new _IString[\"default\"](isObject ? str.value : str);\n}","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/i18n/src/resBundle.js"],"names":["Object","defineProperty","exports","value","clearResBundle","createResBundle","getIStringFromBundle","getResBundle","setResBundle","_IString","_interopRequireDefault","require","_ResBundle","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","resBundle","options","opts","type","name","lengthen","onLoad","bundle","strings","sysres","str","rb","isObject","getString"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clearResBundle = clearResBundle;\nexports.createResBundle = createResBundle;\nexports.getIStringFromBundle = getIStringFromBundle;\nexports.getResBundle = getResBundle;\nexports.setResBundle = setResBundle;\n\nvar _IString = _interopRequireDefault(require(\"ilib/lib/IString\"));\n\nvar _ResBundle = _interopRequireDefault(require(\"ilib/lib/ResBundle\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// The ilib.ResBundle for the active locale used by $L\nvar resBundle;\n/**\n * Returns the current ilib.ResBundle\n *\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\nfunction getResBundle() {\n  return resBundle;\n}\n/**\n * Creates a new ilib.ResBundle for string translation\n *\n * @param  {ilib.Locale} locale Locale for ResBundle\n *\n * @returns {Promise|ResBundle} Resolves with a new ilib.ResBundle\n */\n\n\nfunction createResBundle(options) {\n  var opts = _objectSpread({\n    type: 'html',\n    name: 'strings',\n    lengthen: true\n  }, options);\n\n  if (!opts.onLoad) return; // eslint-disable-next-line no-new\n\n  new _ResBundle[\"default\"](_objectSpread(_objectSpread({}, opts), {}, {\n    onLoad: function onLoad(bundle) {\n      opts.onLoad(bundle || null);\n    }\n  }));\n}\n/**\n * Set the locale for the strings that $L loads. This may reload the\n * string resources if necessary.\n *\n * @param {string} spec the locale specifier\n * @returns {ilib.ResBundle} Current ResBundle\n */\n\n\nfunction setResBundle(bundle) {\n  return resBundle = bundle;\n}\n/**\n * Deletes the current bundle object of strings and clears the cache.\n * @returns {undefined}\n */\n\n\nfunction clearResBundle() {\n  delete _ResBundle[\"default\"].strings;\n  delete _ResBundle[\"default\"].sysres;\n  resBundle = null;\n}\n/**\n * Retrieves an IString from a resource bundle by key.\n *\n * If the bundle doesn't exist, the key is returned wrapped by IString.\n *\n * @param {String|Object} str Key for localized string\n * @param {ResBundl} rb ilib resource bundle\n * @returns\t{IString} The string value wrapped by an IString\n */\n\n\nfunction getIStringFromBundle(str, rb) {\n  var isObject = typeof str === 'object';\n\n  if (rb) {\n    return isObject ? rb.getString(str.value, str.key) : rb.getString(str);\n  }\n\n  return new _IString[\"default\"](isObject ? str.value : str);\n}"]},"metadata":{},"sourceType":"module"}