{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shape = exports.SlideBottomArranger = exports.SlideTopArranger = exports.SlideLeftArranger = exports.SlideRightArranger = exports.SlideArranger = exports.arrange = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar slideInOut = function slideInOut(direction, total, orientation) {\n  var p = direction === 'out' ? total : -total;\n  return orientation === 'top' && 'translateY(' + -p + '%)' || orientation === 'bottom' && 'translateY(' + p + '%)' || orientation === 'left' && 'translateX(' + -p + '%)' || orientation === 'right' && 'translateX(' + p + '%)';\n};\n\nvar arrange = function arrange(_ref, keyframes, options) {\n  var duration = _ref.duration,\n      node = _ref.node,\n      reverse = _ref.reverse;\n  return node.animate(keyframes, _objectSpread({\n    duration: duration,\n    direction: reverse ? 'reverse' : 'normal',\n    fill: 'forwards'\n  }, options));\n};\n/**\n * A function that generates an animation for a given transition configuration\n *\n * @callback ArrangerCallback\n * @param {Object} config                                      - Animation configuration object.\n * @param {Number} config.duration                             - Duration of the animation in ms.\n * @param {('forwards'|'backwards'|'both'|'none')} config.fill - Animation effect should be\n *                                                               reflected by previous state or\n *                                                               retained after animation.\n * @param {Number} config.from                                 - Index from which the ViewManager is\n *                                                               transitioning.\n * @param {Node} config.node                                   - DOM node to be animated.\n * @param {Boolean} config.reverse                             - `true` when the animation should be\n *                                                               reversed.\n * @param {Boolean} config.rtl                                 - `true` when the ViewManager was\n *                                                                configured with `rtl` for locales\n *                                                                that use right-to-left reading\n *                                                                order.\n * @param {Number} config.to                                   - Index to which the ViewManager is\n *                                                               transitioning.\n * @returns {Animation} An `Animation`-compatible object\n * @public\n * @memberof ui/ViewManager\n */\n\n/**\n * An object with callback functions to arrange views within {@link ui/ViewManager.ViewManager}.\n *\n * @typedef {Object} Arranger\n * @property {ArrangerCallback} enter  - Returns an array of keyframes describing the animation when\n *                                       a view is entering the viewport.\n * @property {ArrangerCallback} leave  - Returns an array of keyframes describing the animation when\n *                                       a view is leaving the viewport.\n * @property {ArrangerCallback} [stay] - Returns an array of keyframes describing the animation when\n *                                       a view is remaining in the viewport.\n * @public\n * @memberof ui/ViewManager\n */\n\n/**\n * A basic arranger factory that must be configured with `direction` and optionally an `amount`.\n *\n * @function\n * @memberof ui/ViewManager\n * @param {Object}                          config              - Configuration object.\n * @param {Object}                          [config.amount=100] - Amount, as a whole number, to\n *                                                                \"slide\" where 100 is the entire\n *                                                                size of the node along the axis of\n *                                                                the `direction`.\n * @param {('bottom'|'left'|'right'|'top')} config.direction    - Direction from which the view will\n *                                                                transition.\n * @returns {Arranger}            An arranger\n * @public\n */\n\n\nexports.arrange = arrange;\n\nvar SlideArranger = function SlideArranger(_ref2) {\n  var _ref2$amount = _ref2.amount,\n      amount = _ref2$amount === void 0 ? 100 : _ref2$amount,\n      direction = _ref2.direction;\n  return {\n    enter: function enter(config) {\n      return arrange(config, [{\n        transform: slideInOut('in', amount, direction)\n      }, {\n        transform: slideInOut('in', 0, direction)\n      }]);\n    },\n    leave: function leave(config) {\n      return arrange(config, [{\n        transform: slideInOut('out', 0, direction)\n      }, {\n        transform: slideInOut('out', amount, direction)\n      }]);\n    },\n    stay: function stay(config) {\n      return arrange(config, [{\n        transform: slideInOut('in', 0, direction)\n      }, {\n        transform: slideInOut('in', 0, direction)\n      }]);\n    }\n  };\n};\n/**\n * An arranger that enters from the left and leaves to the right.\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\n\nexports.SlideArranger = SlideArranger;\nvar SlideRightArranger = SlideArranger({\n  direction: 'right'\n});\n/**\n * An arranger that enters from the right and leaves to the left..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideRightArranger = SlideRightArranger;\nvar SlideLeftArranger = SlideArranger({\n  direction: 'left'\n});\n/**\n * An arranger that enters from the bottom and leaves to the top..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideLeftArranger = SlideLeftArranger;\nvar SlideTopArranger = SlideArranger({\n  direction: 'top'\n});\n/**\n * An arranger that enters from the top and leaves to the bottom..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideTopArranger = SlideTopArranger;\nvar SlideBottomArranger = SlideArranger({\n  direction: 'bottom'\n});\n/**\n * propType validation for Arranger transitions\n * @memberof ui/ViewManager\n * @private\n */\n\nexports.SlideBottomArranger = SlideBottomArranger;\n\nvar shape = _propTypes[\"default\"].shape({\n  enter: _propTypes[\"default\"].func,\n  leave: _propTypes[\"default\"].func\n});\n\nexports.shape = shape;","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/ui/ViewManager/Arranger.js"],"names":["Object","defineProperty","exports","value","shape","SlideBottomArranger","SlideTopArranger","SlideLeftArranger","SlideRightArranger","SlideArranger","arrange","_propTypes","_interopRequireDefault","require","obj","__esModule","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","slideInOut","direction","total","orientation","p","_ref","keyframes","options","duration","node","reverse","animate","fill","_ref2","_ref2$amount","amount","enter","config","transform","leave","stay","func"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shape = exports.SlideBottomArranger = exports.SlideTopArranger = exports.SlideLeftArranger = exports.SlideRightArranger = exports.SlideArranger = exports.arrange = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar slideInOut = function slideInOut(direction, total, orientation) {\n  var p = direction === 'out' ? total : -total;\n  return orientation === 'top' && 'translateY(' + -p + '%)' || orientation === 'bottom' && 'translateY(' + p + '%)' || orientation === 'left' && 'translateX(' + -p + '%)' || orientation === 'right' && 'translateX(' + p + '%)';\n};\n\nvar arrange = function arrange(_ref, keyframes, options) {\n  var duration = _ref.duration,\n      node = _ref.node,\n      reverse = _ref.reverse;\n  return node.animate(keyframes, _objectSpread({\n    duration: duration,\n    direction: reverse ? 'reverse' : 'normal',\n    fill: 'forwards'\n  }, options));\n};\n/**\n * A function that generates an animation for a given transition configuration\n *\n * @callback ArrangerCallback\n * @param {Object} config                                      - Animation configuration object.\n * @param {Number} config.duration                             - Duration of the animation in ms.\n * @param {('forwards'|'backwards'|'both'|'none')} config.fill - Animation effect should be\n *                                                               reflected by previous state or\n *                                                               retained after animation.\n * @param {Number} config.from                                 - Index from which the ViewManager is\n *                                                               transitioning.\n * @param {Node} config.node                                   - DOM node to be animated.\n * @param {Boolean} config.reverse                             - `true` when the animation should be\n *                                                               reversed.\n * @param {Boolean} config.rtl                                 - `true` when the ViewManager was\n *                                                                configured with `rtl` for locales\n *                                                                that use right-to-left reading\n *                                                                order.\n * @param {Number} config.to                                   - Index to which the ViewManager is\n *                                                               transitioning.\n * @returns {Animation} An `Animation`-compatible object\n * @public\n * @memberof ui/ViewManager\n */\n\n/**\n * An object with callback functions to arrange views within {@link ui/ViewManager.ViewManager}.\n *\n * @typedef {Object} Arranger\n * @property {ArrangerCallback} enter  - Returns an array of keyframes describing the animation when\n *                                       a view is entering the viewport.\n * @property {ArrangerCallback} leave  - Returns an array of keyframes describing the animation when\n *                                       a view is leaving the viewport.\n * @property {ArrangerCallback} [stay] - Returns an array of keyframes describing the animation when\n *                                       a view is remaining in the viewport.\n * @public\n * @memberof ui/ViewManager\n */\n\n/**\n * A basic arranger factory that must be configured with `direction` and optionally an `amount`.\n *\n * @function\n * @memberof ui/ViewManager\n * @param {Object}                          config              - Configuration object.\n * @param {Object}                          [config.amount=100] - Amount, as a whole number, to\n *                                                                \"slide\" where 100 is the entire\n *                                                                size of the node along the axis of\n *                                                                the `direction`.\n * @param {('bottom'|'left'|'right'|'top')} config.direction    - Direction from which the view will\n *                                                                transition.\n * @returns {Arranger}            An arranger\n * @public\n */\n\n\nexports.arrange = arrange;\n\nvar SlideArranger = function SlideArranger(_ref2) {\n  var _ref2$amount = _ref2.amount,\n      amount = _ref2$amount === void 0 ? 100 : _ref2$amount,\n      direction = _ref2.direction;\n  return {\n    enter: function enter(config) {\n      return arrange(config, [{\n        transform: slideInOut('in', amount, direction)\n      }, {\n        transform: slideInOut('in', 0, direction)\n      }]);\n    },\n    leave: function leave(config) {\n      return arrange(config, [{\n        transform: slideInOut('out', 0, direction)\n      }, {\n        transform: slideInOut('out', amount, direction)\n      }]);\n    },\n    stay: function stay(config) {\n      return arrange(config, [{\n        transform: slideInOut('in', 0, direction)\n      }, {\n        transform: slideInOut('in', 0, direction)\n      }]);\n    }\n  };\n};\n/**\n * An arranger that enters from the left and leaves to the right.\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\n\nexports.SlideArranger = SlideArranger;\nvar SlideRightArranger = SlideArranger({\n  direction: 'right'\n});\n/**\n * An arranger that enters from the right and leaves to the left..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideRightArranger = SlideRightArranger;\nvar SlideLeftArranger = SlideArranger({\n  direction: 'left'\n});\n/**\n * An arranger that enters from the bottom and leaves to the top..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideLeftArranger = SlideLeftArranger;\nvar SlideTopArranger = SlideArranger({\n  direction: 'top'\n});\n/**\n * An arranger that enters from the top and leaves to the bottom..\n *\n * @type {Arranger}\n * @memberof ui/ViewManager\n * @public\n */\n\nexports.SlideTopArranger = SlideTopArranger;\nvar SlideBottomArranger = SlideArranger({\n  direction: 'bottom'\n});\n/**\n * propType validation for Arranger transitions\n * @memberof ui/ViewManager\n * @private\n */\n\nexports.SlideBottomArranger = SlideBottomArranger;\n\nvar shape = _propTypes[\"default\"].shape({\n  enter: _propTypes[\"default\"].func,\n  leave: _propTypes[\"default\"].func\n});\n\nexports.shape = shape;"]},"metadata":{},"sourceType":"module"}