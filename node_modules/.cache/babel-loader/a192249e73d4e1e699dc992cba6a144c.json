{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Job\", {\n  enumerable: true,\n  get: function get() {\n    return _Job[\"default\"];\n  }\n});\nexports.mapAndFilterChildren = exports.perfNow = exports.mergeClassNameMaps = exports.memoize = exports.isRenderable = exports.extractAriaProps = exports.coerceFunction = exports.coerceArray = exports.clamp = exports.cap = void 0;\n\nvar _always = _interopRequireDefault(require(\"ramda/src/always\"));\n\nvar _is = _interopRequireDefault(require(\"ramda/src/is\"));\n\nvar _unless = _interopRequireDefault(require(\"ramda/src/unless\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar ReactIs = _interopRequireWildcard(require(\"react-is\"));\n\nvar _Job = _interopRequireDefault(require(\"./Job\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/**\n * A collection of utility methods.\n *\n * @module core/util\n * @exports cap\n * @exports clamp\n * @exports coerceArray\n * @exports coerceFunction\n * @exports extractAriaProps\n * @exports isRenderable\n * @exports Job\n * @exports memoize\n * @exports mergeClassNameMaps\n * @exports perfNow\n * @exports mapAndFilterChildren\n */\n\n/**\n * Capitalizes a given string (not locale-aware).\n *\n * @function\n * @param   {String}    str   The string to capitalize.\n *\n * @returns {String}          The capitalized string.\n * @memberof core/util\n * @public\n */\n\n\nvar cap = function cap(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n};\n/**\n * Limits `value` to be between `min` and `max`.\n *\n * If `min` is greater than `max`, `min` is returned.\n *\n * @function\n * @param   {Number}    min   The minimum value of the range\n * @param   {Number}    max   The maximum value of the range\n * @param   {Number}    value The value that must be within the range\n *\n * @returns {Number}          The clamped value\n * @memberof core/util\n * @public\n */\n\n\nexports.cap = cap;\n\nvar clamp = function clamp(min, max, value) {\n  if (min > max || value < min) return min;\n  if (value > max) return max;\n  return value;\n};\n/**\n * If `arg` is a function, return it. Otherwise returns a function that returns `arg`.\n *\n * Example:\n * ```\n *\tconst returnsZero = coerceFunction(0);\n *\tconst returnsArg = coerceFunction(() => 0);\n * ```\n * @function\n * @param {*}    arg    Function or value\n *\n * @returns {Function}  Either `arg` if `arg` is a function, or a function that returns `arg`\n * @memberof core/util\n * @public\n */\n\n\nexports.clamp = clamp;\nvar coerceFunction = (0, _unless[\"default\"])((0, _is[\"default\"])(Function), _always[\"default\"]);\n/**\n * If `arg` is array-like, return it. Otherwise returns a single element array containing `arg`.\n *\n * Example:\n * ```\n *\tconst returnsArray = coerceArray(0); // [0]\n *\tconst returnsArg = coerceArray([0]); // [0]\n *\tconst returnsObjArg = coerceArray({0: 'zeroth', length: 1});\n * ```\n * @see http://ramdajs.com/docs/#isArrayLike\n * @function\n * @param {*}    array    Array or value\n *\n * @returns {Array}       Either `array` or `[array]`\n * @memberof core/util\n * @public\n */\n\nexports.coerceFunction = coerceFunction;\n\nvar coerceArray = function coerceArray(array) {\n  return Array.isArray(array) ? array : [array];\n};\n/**\n * Loosely determines if `tag` is a renderable component (either a string or a function).\n *\n * @function\n * @param {*}    tag    Component to test\n *\n * @returns {Boolean}   `true` if `tag` is either a string or a function\n * @memberof core/util\n * @public\n */\n\n\nexports.coerceArray = coerceArray;\n\nvar isRenderable = function isRenderable(tag) {\n  return ReactIs.isValidElementType(tag);\n};\n/**\n * Removes ARIA-related props from `props` and returns them in a new object.\n *\n * Specifically, it removes the `role` prop and any prop prefixed with `aria-`. This is useful when\n * redirecting ARIA-related props from a non-focusable root element to a focusable child element.\n *\n * @function\n * @param   {Object}    props    Props object\n *\n * @returns {Object}             ARIA-related props\n * @memberof core/util\n * @public\n */\n\n\nexports.isRenderable = isRenderable;\n\nvar extractAriaProps = function extractAriaProps(props) {\n  var aria = {};\n  Object.keys(props).forEach(function (key) {\n    if (key === 'role' || key.indexOf('aria-') === 0) {\n      aria[key] = props[key];\n      delete props[key];\n    }\n  });\n  return aria;\n};\n/**\n * Gets the current timestamp of either `window.performance.now` or `Date.now`\n *\n * @function\n *\n * @returns {Number}                    The timestamp from `window.performance.now` or `Date.now`\n * @memberof core/util\n * @public\n */\n\n\nexports.extractAriaProps = extractAriaProps;\n\nvar perfNow = function perfNow() {\n  if (typeof window === 'object') {\n    return window.performance.now();\n  } else {\n    return Date.now();\n  }\n};\n/**\n * Merges two class name maps into one.\n *\n * The resulting map will only contain the class names defined in the `baseMap` and will be appended\n * with the value from `additiveMap` if it exists. Further, `allowedClassNames` may optionally limit\n * which keys will be merged from `additiveMap` into `baseMap`.\n *\n * Example:\n * ```\n * // merges all matching class names from additiveMap1 with baseMap1\n * const newMap1 = mergeClassNameMaps(baseMap1, additiveMap1);\n *\n * // merge only 'a' and 'b' class names from additiveMap2 with baseMap2\n * const newMap2 = mergeClassNameMaps(baseMap2, additiveMap2, ['a', 'b']);\n * ```\n *\n * @function\n * @param {Object}     baseMap             The source mapping of logical class name to physical\n *                                         class name\n * @param {Object}     additiveMap         Mapping of logical to physical class names which are\n *                                         concatenated with `baseMap` where the logical names match\n * @param {String[]}  [allowedClassNames]  Array of logical class names that can be augmented. When\n *                                         set, the logical class name must exist in `baseMap`,\n *                                         `additiveMap`, and this array to be concatenated.\n *\n * @returns {Object}                       The merged class name map.\n * @memberof core/util\n * @public\n */\n\n\nexports.perfNow = perfNow;\n\nvar mergeClassNameMaps = function mergeClassNameMaps(baseMap, additiveMap, allowedClassNames) {\n  var css = baseMap;\n\n  if (baseMap && additiveMap) {\n    allowedClassNames = allowedClassNames || Object.keys(additiveMap); // if the props includes a css map, merge them together now\n\n    css = Object.assign({}, baseMap);\n    allowedClassNames.forEach(function (key) {\n      if (baseMap[key] && additiveMap[key]) {\n        css[key] = baseMap[key] + ' ' + additiveMap[key];\n      }\n    });\n\n    if (process.env.NODE_ENV === 'test') {\n      return new Proxy({}, {\n        get: function get(target, key) {\n          // use the merged value if it exists and the key otherwise\n          return css[key] || key;\n        }\n      });\n    }\n  }\n\n  return css;\n};\n/**\n * Creates a function that memoizes the result of `fn`.\n *\n * Note that this function is a naive implementation and only checks the first argument for\n * memoization.\n *\n * @function\n * @param {Function}    fn    The function to have its output memoized.\n *\n * @returns {Function}        The new memoized function.\n * @memberof core/util\n * @public\n */\n\n\nexports.mergeClassNameMaps = mergeClassNameMaps;\n\nvar memoize = function memoize(fn) {\n  var cache = {};\n  return function () {\n    var n = arguments.length <= 0 ? undefined : arguments[0];\n\n    if (n in cache) {\n      return cache[n];\n    } else {\n      var result = fn.apply(void 0, arguments);\n      cache[n] = result;\n      return result;\n    }\n  };\n};\n/**\n * Maps over the `children`, discarding any `null` children before and after calling the callback.\n *\n * A replacement for `React.Children.map`.\n *\n * @function\n * @param {*}        children  Children to map over\n * @param {Function} callback  Function to apply to each child. Will not be called if the child is\n *                              `null`. If `callback` returns `null`, the child will be removed from\n *                              the result. If `null` is returned, the item will not be included in\n *                              the final output, regardless of the filter function.\n * @param {Function} [filter]  Filter function applied after mapping.\n *\n * @returns {*}                The processed children or the value of `children` if not an array.\n * @memberof core/util\n * @see https://reactjs.org/docs/react-api.html#reactchildrenmap\n * @public\n */\n\n\nexports.memoize = memoize;\n\nvar mapAndFilterChildren = function mapAndFilterChildren(children, callback, filter) {\n  var result = _react[\"default\"].Children.map(children, function (child) {\n    if (child != null) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      return callback.apply(void 0, [child].concat(rest));\n    } else {\n      return child;\n    }\n  });\n\n  if (result && filter) {\n    return result.filter(filter);\n  } else {\n    return result;\n  }\n};\n\nexports.mapAndFilterChildren = mapAndFilterChildren;","map":{"version":3,"sources":["/Users/sonjaeseong/workspace/webOS/CARROT/webOS_GUI/node_modules/@enact/core/util/util.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_Job","mapAndFilterChildren","perfNow","mergeClassNameMaps","memoize","isRenderable","extractAriaProps","coerceFunction","coerceArray","clamp","cap","_always","_interopRequireDefault","require","_is","_unless","_react","ReactIs","_interopRequireWildcard","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","str","slice","toUpperCase","min","max","Function","array","Array","isArray","tag","isValidElementType","props","aria","keys","forEach","indexOf","window","performance","now","Date","baseMap","additiveMap","allowedClassNames","css","assign","process","env","NODE_ENV","Proxy","target","fn","n","arguments","length","undefined","result","apply","children","callback","filter","Children","map","child","_len","rest","_key","concat"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Job\", {\n  enumerable: true,\n  get: function get() {\n    return _Job[\"default\"];\n  }\n});\nexports.mapAndFilterChildren = exports.perfNow = exports.mergeClassNameMaps = exports.memoize = exports.isRenderable = exports.extractAriaProps = exports.coerceFunction = exports.coerceArray = exports.clamp = exports.cap = void 0;\n\nvar _always = _interopRequireDefault(require(\"ramda/src/always\"));\n\nvar _is = _interopRequireDefault(require(\"ramda/src/is\"));\n\nvar _unless = _interopRequireDefault(require(\"ramda/src/unless\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar ReactIs = _interopRequireWildcard(require(\"react-is\"));\n\nvar _Job = _interopRequireDefault(require(\"./Job\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/**\n * A collection of utility methods.\n *\n * @module core/util\n * @exports cap\n * @exports clamp\n * @exports coerceArray\n * @exports coerceFunction\n * @exports extractAriaProps\n * @exports isRenderable\n * @exports Job\n * @exports memoize\n * @exports mergeClassNameMaps\n * @exports perfNow\n * @exports mapAndFilterChildren\n */\n\n/**\n * Capitalizes a given string (not locale-aware).\n *\n * @function\n * @param   {String}    str   The string to capitalize.\n *\n * @returns {String}          The capitalized string.\n * @memberof core/util\n * @public\n */\nvar cap = function cap(str) {\n  return str.slice(0, 1).toUpperCase() + str.slice(1);\n};\n/**\n * Limits `value` to be between `min` and `max`.\n *\n * If `min` is greater than `max`, `min` is returned.\n *\n * @function\n * @param   {Number}    min   The minimum value of the range\n * @param   {Number}    max   The maximum value of the range\n * @param   {Number}    value The value that must be within the range\n *\n * @returns {Number}          The clamped value\n * @memberof core/util\n * @public\n */\n\n\nexports.cap = cap;\n\nvar clamp = function clamp(min, max, value) {\n  if (min > max || value < min) return min;\n  if (value > max) return max;\n  return value;\n};\n/**\n * If `arg` is a function, return it. Otherwise returns a function that returns `arg`.\n *\n * Example:\n * ```\n *\tconst returnsZero = coerceFunction(0);\n *\tconst returnsArg = coerceFunction(() => 0);\n * ```\n * @function\n * @param {*}    arg    Function or value\n *\n * @returns {Function}  Either `arg` if `arg` is a function, or a function that returns `arg`\n * @memberof core/util\n * @public\n */\n\n\nexports.clamp = clamp;\nvar coerceFunction = (0, _unless[\"default\"])((0, _is[\"default\"])(Function), _always[\"default\"]);\n/**\n * If `arg` is array-like, return it. Otherwise returns a single element array containing `arg`.\n *\n * Example:\n * ```\n *\tconst returnsArray = coerceArray(0); // [0]\n *\tconst returnsArg = coerceArray([0]); // [0]\n *\tconst returnsObjArg = coerceArray({0: 'zeroth', length: 1});\n * ```\n * @see http://ramdajs.com/docs/#isArrayLike\n * @function\n * @param {*}    array    Array or value\n *\n * @returns {Array}       Either `array` or `[array]`\n * @memberof core/util\n * @public\n */\n\nexports.coerceFunction = coerceFunction;\n\nvar coerceArray = function coerceArray(array) {\n  return Array.isArray(array) ? array : [array];\n};\n/**\n * Loosely determines if `tag` is a renderable component (either a string or a function).\n *\n * @function\n * @param {*}    tag    Component to test\n *\n * @returns {Boolean}   `true` if `tag` is either a string or a function\n * @memberof core/util\n * @public\n */\n\n\nexports.coerceArray = coerceArray;\n\nvar isRenderable = function isRenderable(tag) {\n  return ReactIs.isValidElementType(tag);\n};\n/**\n * Removes ARIA-related props from `props` and returns them in a new object.\n *\n * Specifically, it removes the `role` prop and any prop prefixed with `aria-`. This is useful when\n * redirecting ARIA-related props from a non-focusable root element to a focusable child element.\n *\n * @function\n * @param   {Object}    props    Props object\n *\n * @returns {Object}             ARIA-related props\n * @memberof core/util\n * @public\n */\n\n\nexports.isRenderable = isRenderable;\n\nvar extractAriaProps = function extractAriaProps(props) {\n  var aria = {};\n  Object.keys(props).forEach(function (key) {\n    if (key === 'role' || key.indexOf('aria-') === 0) {\n      aria[key] = props[key];\n      delete props[key];\n    }\n  });\n  return aria;\n};\n/**\n * Gets the current timestamp of either `window.performance.now` or `Date.now`\n *\n * @function\n *\n * @returns {Number}                    The timestamp from `window.performance.now` or `Date.now`\n * @memberof core/util\n * @public\n */\n\n\nexports.extractAriaProps = extractAriaProps;\n\nvar perfNow = function perfNow() {\n  if (typeof window === 'object') {\n    return window.performance.now();\n  } else {\n    return Date.now();\n  }\n};\n/**\n * Merges two class name maps into one.\n *\n * The resulting map will only contain the class names defined in the `baseMap` and will be appended\n * with the value from `additiveMap` if it exists. Further, `allowedClassNames` may optionally limit\n * which keys will be merged from `additiveMap` into `baseMap`.\n *\n * Example:\n * ```\n * // merges all matching class names from additiveMap1 with baseMap1\n * const newMap1 = mergeClassNameMaps(baseMap1, additiveMap1);\n *\n * // merge only 'a' and 'b' class names from additiveMap2 with baseMap2\n * const newMap2 = mergeClassNameMaps(baseMap2, additiveMap2, ['a', 'b']);\n * ```\n *\n * @function\n * @param {Object}     baseMap             The source mapping of logical class name to physical\n *                                         class name\n * @param {Object}     additiveMap         Mapping of logical to physical class names which are\n *                                         concatenated with `baseMap` where the logical names match\n * @param {String[]}  [allowedClassNames]  Array of logical class names that can be augmented. When\n *                                         set, the logical class name must exist in `baseMap`,\n *                                         `additiveMap`, and this array to be concatenated.\n *\n * @returns {Object}                       The merged class name map.\n * @memberof core/util\n * @public\n */\n\n\nexports.perfNow = perfNow;\n\nvar mergeClassNameMaps = function mergeClassNameMaps(baseMap, additiveMap, allowedClassNames) {\n  var css = baseMap;\n\n  if (baseMap && additiveMap) {\n    allowedClassNames = allowedClassNames || Object.keys(additiveMap); // if the props includes a css map, merge them together now\n\n    css = Object.assign({}, baseMap);\n    allowedClassNames.forEach(function (key) {\n      if (baseMap[key] && additiveMap[key]) {\n        css[key] = baseMap[key] + ' ' + additiveMap[key];\n      }\n    });\n\n    if (process.env.NODE_ENV === 'test') {\n      return new Proxy({}, {\n        get: function get(target, key) {\n          // use the merged value if it exists and the key otherwise\n          return css[key] || key;\n        }\n      });\n    }\n  }\n\n  return css;\n};\n/**\n * Creates a function that memoizes the result of `fn`.\n *\n * Note that this function is a naive implementation and only checks the first argument for\n * memoization.\n *\n * @function\n * @param {Function}    fn    The function to have its output memoized.\n *\n * @returns {Function}        The new memoized function.\n * @memberof core/util\n * @public\n */\n\n\nexports.mergeClassNameMaps = mergeClassNameMaps;\n\nvar memoize = function memoize(fn) {\n  var cache = {};\n  return function () {\n    var n = arguments.length <= 0 ? undefined : arguments[0];\n\n    if (n in cache) {\n      return cache[n];\n    } else {\n      var result = fn.apply(void 0, arguments);\n      cache[n] = result;\n      return result;\n    }\n  };\n};\n/**\n * Maps over the `children`, discarding any `null` children before and after calling the callback.\n *\n * A replacement for `React.Children.map`.\n *\n * @function\n * @param {*}        children  Children to map over\n * @param {Function} callback  Function to apply to each child. Will not be called if the child is\n *                              `null`. If `callback` returns `null`, the child will be removed from\n *                              the result. If `null` is returned, the item will not be included in\n *                              the final output, regardless of the filter function.\n * @param {Function} [filter]  Filter function applied after mapping.\n *\n * @returns {*}                The processed children or the value of `children` if not an array.\n * @memberof core/util\n * @see https://reactjs.org/docs/react-api.html#reactchildrenmap\n * @public\n */\n\n\nexports.memoize = memoize;\n\nvar mapAndFilterChildren = function mapAndFilterChildren(children, callback, filter) {\n  var result = _react[\"default\"].Children.map(children, function (child) {\n    if (child != null) {\n      for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        rest[_key - 1] = arguments[_key];\n      }\n\n      return callback.apply(void 0, [child].concat(rest));\n    } else {\n      return child;\n    }\n  });\n\n  if (result && filter) {\n    return result.filter(filter);\n  } else {\n    return result;\n  }\n};\n\nexports.mapAndFilterChildren = mapAndFilterChildren;"]},"metadata":{},"sourceType":"module"}